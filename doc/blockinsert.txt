*blockinsert.txt* For Vim version 7               Last change: 13 September 2010


                   Easy Insert/Append to a paragraph of text~


                              By Dimitar Dimitrov
                                   kurkale6ka
                                mitkofr@yahoo.fr

                                Reference Manual~



1. Normal mode                                               |blockinsert-normal|
2. Visual mode                                               |blockinsert-visual|
3. Commands                                                |blockinsert-commands|
4. Mappings                                                |blockinsert-mappings|

The functionality mentioned here is a plugin, see |add-plugin|.
You can avoid loading this plugin by setting the blockinsert global variable in
your |vimrc| file:
>
    :let g:loaded_blockinsert = 1
<
================================================================================
1. Normal mode                                               *blockinsert-normal*

    1.1 Insert                             |blockinsert-insert|
    1.2 Append                             |blockinsert-append|
    1.3 Delete                             |blockinsert-delete|
    1.4 Act on both ends                   |blockinsert-both|
    1.5 Record                             |blockinsert-record|

Blockinsert can take a range but if no such is given it will act upon the
current paragraph.
>
        First line of code
            Another line of code
    Yet another one
        Last line of code
<
1.1 Insert                                 *blockinsert-insert*

[count] \i - will transform the above into: (count 3 used)
>
        ---First line of code
            ---Another line of code
    ---Yet another one
        ---Last line of code
<
1.2 Append                                 *blockinsert-append*

[count] \a > will transform the above into: (count 2 used)
>
        ---First line of code>>
            ---Another line of code>>
    ---Yet another one>>
        ---Last line of code>>
<
1.3 Delete                                 *blockinsert-delete*

[count] \i or \a without any text will delete as many characters: (3\i used)
>
        First line of code>>
            Another line of code>>
    Yet another one>>
        Last line of code>>
<
1.4 Act on both ends                         *blockinsert-both*

[count] \[] will use both \i and \a: (2\[] * ** used)

        Note: the same [count] will be applied to both operations
>
        **First line of code>>****
            **Another line of code>>****
    **Yet another one>>****
        **Last line of code>>****
<
1.5 Record                                 *blockinsert-record*

\qi, \qa and \q[] will execute rather than write the text in input.

Example with \qa gUaW:
>
        **First line of CODE>>****
            **Another line of CODE>>****
    **Yet another ONE>>****
        **Last line of CODE>>****
<
================================================================================
2. Visual mode                                               *blockinsert-visual*

The visual mappings do the same work as the normal ones |blockinsert-normal|,
The only difference is that here the range is defined by the selected lines.

================================================================================
3. Commands                                                *blockinsert-commands*

The following commands are also available, meant as an alternative to the
normal and visual mappings:

Insert     Write your text here
Append     Write your text here
QInsert    Define your actions here
QAppend    Define your actions here
Both       Write your text here
QBoth      Define your actions here

*Todo make :Both and :QBoth accept two arguments,
      use text2 and <f-args> (<f-args>[0]?) ...

*Todo make the commands accept a count as their first argument

================================================================================
4. Mappings                                                *blockinsert-mappings*

For all this to work you MUST define your custom mappings in your |vimrc|:

vmap <leader>i  <plug>blockinsert-i
vmap <leader>a  <plug>blockinsert-a
vmap <leader>qi <plug>blockinsert-qi
vmap <leader>qa <plug>blockinsert-qa

nmap <leader>i  <plug>blockinsert-i
nmap <leader>a  <plug>blockinsert-a
nmap <leader>qi <plug>blockinsert-qi
nmap <leader>qa <plug>blockinsert-qa

vmap <leader>[]  <plug>blockinsert-b
vmap <leader>q[] <plug>blockinsert-qb

nmap <leader>[]  <plug>blockinsert-b
nmap <leader>q[] <plug>blockinsert-qb

Note: You can replace \i, \a, \qi, \qa, \[], \q[] with whatever you like.

================================================================================
 vim: textwidth=80 tabstop=8 filetype=help
